using DegeneratorForMaps.MapGenerator;
using SCR_Super_Consol_Rogalik_.Entiti;
using SCR_Super_Consol_Rogalik_.GameStuf;
using System;

namespace SCR_Super_Consol_Rogalik_.Map_Screen
{
    public enum MapObjects
    {
        Wall, WallDamaged, WallChipped, WallHeavy,
        Ground, Water, DeepWater, Gobline
    }
    public class TravalingScreen
    {


        public TravalingScreen()
        {
            char[,] textMap =
                 {{ '1','1','1','3','1','1','▒','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' },
                 {  '1','▒','▒','░','▒','▒','▒','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' },
                 {  '1','▒','▒','░','▒','▒','▒','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' },
                 {  '1','▒','▒','░','▒','▒','▒','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' },
                 {  '1','▒','2','2','2','▒','▒','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' },
                 {  '1','▒','2','2','2','▒','▒','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' },
                 {  '~','▒','2','2','2','▒','▒','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' },
                 {  '1','~','~','1','2','1','1','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' },
                 {  '1','~','D','~','2','1','1','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' },
                 {  '1','~','D','~','2','♥','1','3','2','1','2','1','1','1','1','2','2','2','1','1','2','1','1','1','1','1','1','1' },
                 {  '1','3','░','▒','▓','█','1','3','2','1','2','1','1','1','1','2','2','2','1','1','2','1','1','1','1','1','1','1' },
                 {  '1','3','░','▒','▓','█','1','3','2','1','2','1','1','1','1','2','2','2','1','1','2','1','1','1','1','1','1','1' },
                 {  '1','3','░','▒','▓','█','1','3','2','1','2','1','1','1','1','2','2','2','1','1','2','1','1','1','1','1','1','1' },
                 {  '1','3','░','▒','▓','█','1','3','2','1','2','1','1','1','1','2','2','2','1','1','2','1','1','1','1','1','1','1' },
                 {  '1','3','░','▒','▓','█','1','3','2','1','2','1','1','1','1','2','2','2','1','1','2','1','1','1','1','1','1','1' },
                 {  '1','3','░','▒','▓','█','1','3','2','1','2','1','1','1','1','2','2','2','1','1','2','1','1','1','1','1','1','1' },
                 {  '1','3','2','1','2','1','1','3','2','1','2','1','1','1','1','2','2','2','1','1','2','1','1','1','1','1','1','1' },
                 {  '~','~','~','1','2','1','1','3','2','1','2','1','1','1','1','2','2','2','1','1','2','1','1','1','1','1','1','1' },
                 {  '1','3','2','~','2','1','1','3','2','1','2','1','1','1','1','2','2','2','1','1','2','1','1','1','1','1','1','1' },
                 {  '1','3','2','1','~','1','1','3','2','1','2','1','1','1','1','2','2','2','1','1','2','1','1','1','1','1','1','1' },
                 {  '1','3','2','1','2','1','1','3','2','1','2','1','1','1','1','2','2','2','1','1','2','1','1','1','1','1','1','1' },
                 {  '1','3','2','1','2','1','1','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' },
                 {  '1','3','2','1','2','1','1','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' },
                 {  '1','3','2','1','2','1','1','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' },
                 {  '1','3','2','1','2','1','1','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' },
                 {  '1','1','2','2','2','1','▒','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' },
                 {  '1','1','2','2','2','1','▒','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' },
                 {  '1','1','2','2','2','1','▒','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' },
                 {  '1','1','1','3','1','1','▒','3','2','1','2','1','1','1','1','2','2','2','1','▒','2','1','1','1','1','1','1','1' }};


            char[,] Ruines1 =
                {{ '▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓' },
                 { '▓','█','█','█','█','█','█','█','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','█','█','█','█','█','█','█','█','█','█','█','█' },
                 { '▓','█','1','1','1','1','1','█','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','█','1','1','1','1','░','░','░','░','░','░','█' },
                 { '▓','█','1','1','1','1','1','█','█','█','█','█','█','█','█','█','█','█','█','█','1','1','1','1','1','1','░','░','░','░','█' },
                 { '▓','█','1','1','G','1','1','░','▒','▒','▒','░','~','~','~','~','1','1','1','1','1','1','1','1','G','1','1','1','░','░','█' },
                 { '▓','█','1','1','1','1','1','█','█','█','█','█','█','█','█','█','█','█','█','█','1','1','1','1','1','1','1','1','1','1','█' },
                 { '▓','█','1','1','1','1','1','█','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','█','1','1','1','1','1','1','1','1','1','1','█' },
                 { '▓','█','█','█','1','█','█','█','█','█','▓','▓','▓','▓','▓','▓','▓','▓','▓','█','1','1','G','1','1','1','1','1','1','1','█' },
                 { '▓','▓','▓','█','░','█','░','░','░','█','█','█','█','█','▓','▓','▓','▓','▓','█','1','1','1','1','1','1','1','1','1','1','█' },
                 { '▓','▓','▓','█','▓','▓','░','░','1','1','1','1','1','1','▓','▓','▓','▓','▓','█','1','1','1','1','1','1','1','1','1','1','█' },
                 { '▓','▓','▓','█','▒','█','░','1','1','█','█','█','█','▓','▓','▓','▓','▓','▓','█','1','1','1','1','1','1','1','1','1','1','█' },
                 { '▓','▓','▓','█','1','█','1','1','1','█','▓','▓','▓','▓','▓','▓','▓','▓','▓','█','1','1','1','1','1','1','1','1','1','1','█' },
                 { '▓','▓','▓','█','1','█','1','1','1','█','▓','▓','▓','▓','▓','▓','▓','▓','▓','█','1','1','1','1','1','1','G','1','1','1','█' },
                 { '▓','▓','▓','█','1','█','1','1','1','█','▓','▓','▓','▓','▓','▓','▓','▓','▓','█','1','1','1','1','1','1','1','1','1','1','█' },
                 { '▓','▓','▓','▓','▓','▓','1','1','1','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','█','█','█','█','█','█','█','█','█','█','█','█' },
                 { '▓','▓','▓','▓','▓','▓','1','1','1','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓','▓' }};

            //Map aboba = new(300, 300);
         //   Map abobys = new Map(200, 200, 20, 20, 20, 20, 10);
            Map abobys = new Map(100, 100, 20, 20, 20, 20, 10);
            abobys.PlaceStructure(0, 0, Ruines1);
            textMap = abobys.GameField;

           

            map = new MapObjects[textMap.GetLength(0), textMap.GetLength(1)];

            for (int y = 0; y < textMap.GetLength(0); y++)
            {
                for (int x = 0; x < textMap.GetLength(1); x++)
                {
                    map[y, x] = textMap[y, x] switch
                    {
                        '█' => MapObjects.WallHeavy,
                        '▓' => MapObjects.Wall,
                        '▒' => MapObjects.WallDamaged,
                        '░' => MapObjects.WallChipped,
                        '~' => MapObjects.Water,
                        'D' => MapObjects.DeepWater,
                        '·' => MapObjects.Ground,
                        'G' => MapObjects.Gobline,
                        _ => MapObjects.Ground
                    };
                }
            }
        }
        public static MapObjects[,] map;

        // ░▒▓
        public static int visRadius = 12;
        public string buffScreen = "";
        public string buffScreenMonsters = "";


        public void ChipWall(int posX, int posY)
        {
            bool isUse = false;
            if (map[posX, posY] == MapObjects.Wall)
            { map[posX, posY] = MapObjects.WallDamaged; isUse = true; GameLog.addLog("Попытка добычи массива"); }

            else if (map[posX, posY] == MapObjects.WallDamaged)
            { map[posX, posY] = MapObjects.WallChipped; isUse = true; GameLog.addLog("Попытка добычи массива"); }
            else if (map[posX, posY] == MapObjects.WallChipped)
            { map[posX, posY] = MapObjects.Ground; isUse = true; GameLog.addLog("Добыча массива"); }

            if (Player.equpTool != null && isUse)
            { isUse = false; Player.equpTool.Material.heal -= 10 - Player.equpTool.Material.bonus; Player.IsMining = true; }

        }

        public void Visible()
        {



            for (int y = visRadius; y >= -visRadius; y--)
            {
                for (int x = visRadius; x >= -visRadius; x--)
                {
                    //¤°¤


                    if ((map.GetLength(1) <= Player.x - x || map.GetLength(0) <= Player.y - y) || (0 > Player.x - x || 0 > Player.y - y))//index array
                    { buffScreen += " " + " " + " "; }

                    else if (y == 0 && x == 0)//this is player cordinat
                    {
                        //mid player

                        if (Player.equpArmor != null)
                        {
                            buffScreen += Player.equpArmor.Material.color + "¤" + Player.equpArmor.MiniIcon + Material.defaltColor;
                        }
                        else
                        {
                            buffScreen += "." + Player.avatar;
                        }
                        if (Player.equpWeapon != null)
                        {
                            buffScreen += Player.equpWeapon.Material.color + Player.equpWeapon.MiniIcon + Material.defaltColor;
                        }
                        else
                        {
                            buffScreen += ".";
                        }


                    }


                    else
                        if (map[Player.y - y, Player.x - x].IsWall())//если тайтл не проходим, то отрисовываем три
                    {
                        char title = map[Player.y - y, Player.x - x].GetTile();
                        if (map[Player.y - y, Player.x - x] == MapObjects.DeepWater)
                        {
                            buffScreen += "" + "\u001b[34m" + title + title + title + "\u001b[0m";
                        }
                        else
                        {
                            buffScreen += "" + title + title + title;
                        }


                    }

                    else if (map[Player.y - y, Player.x - x] == MapObjects.Water)
                    {
                        string titel = "" + map[Player.y - y, Player.x - x].GetTile();
                        buffScreen += "\u001b[36m" + '\'' + titel + ',' + "\u001b[0m";
                    }
                    else if(map[Player.y - y, Player.x - x] == MapObjects.Gobline)
                    {
                        Program.monsters.Add(new Monster(Monster.Type.GoblinSpear, "Warden", Player.x - x, Player.y - y));
                        map[Player.y - y, Player.x - x] = MapObjects.Ground;
                        buffScreen += "<->";
                    }
                    else
                        buffScreen += "\u001b[38;5;237m" + " " + map[Player.y - y, Player.x - x].GetTile() + " " + "\u001b[0m";
                }
                buffScreen += '\n';
            }
            //monsters

            Console.SetCursorPosition(0, 0);
            Console.Write(buffScreen);
             
            foreach (var monster in Program.visibleMonsters)
            {
                Console.SetCursorPosition((monster.x - Player.x + visRadius) * 3, monster.y - Player.y + visRadius);
                Console.ForegroundColor = ConsoleColor.DarkRed;
                Console.Write(" \u001b[31m" + monster.Icon + "\u001b[0m ");
                Console.ResetColor();
            }


            Console.SetCursorPosition(0, 0);
            // Console.Write(buffScreenMonsters);
            buffScreen = "";
            buffScreenMonsters = "";

        }

    }
}
